/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package securityport;

import Classes.Apartamentos;
import Classes.Cargos;
import Classes.ClassConecta;
import Classes.Funcoes;
import Classes.Torres;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class jFApartamentos extends javax.swing.JDialog {

    /**
     * Creates new form jFApartamentos
     */
    public jFApartamentos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        editarjButton = new javax.swing.JButton();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        cancelarjButton = new javax.swing.JButton();
        limparjButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomeApartamentojTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradeApartamentojTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        buscarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/buscar.png"))); // NOI18N
        buscarjButton.setText("Buscar");
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/new2.png"))); // NOI18N
        novojButton.setText("Novo");
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);
        jToolBar1.add(jSeparator4);

        editarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/edit.png"))); // NOI18N
        editarjButton.setText("Editar");
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);

        salvarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/save.png"))); // NOI18N
        salvarjButton.setText("Salvar");
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        salvarMaisjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/save_plus.png"))); // NOI18N
        salvarMaisjButton.setText("Salvar+");
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarMaisjButton);

        alterarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/save2.png"))); // NOI18N
        alterarjButton.setText("Alterar");
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/delete.png"))); // NOI18N
        excluirjButton.setText("Excluir");
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);
        jToolBar1.add(jSeparator2);
        jToolBar1.add(jSeparator1);
        jToolBar1.add(jSeparator3);

        cancelarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Cancel.png"))); // NOI18N
        cancelarjButton.setText("Cancelar");
        cancelarjButton.setFocusable(false);
        cancelarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(cancelarjButton);

        limparjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/clear.png"))); // NOI18N
        limparjButton.setText("Limpar");
        limparjButton.setFocusable(false);
        limparjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(limparjButton);

        jLabel1.setText("Nome da torre");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(nomeApartamentojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeApartamentojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastro Torre", jPanel1);

        gradeApartamentojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Torre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeApartamentojTable.getTableHeader().setReorderingAllowed(false);
        gradeApartamentojTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeApartamentojTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradeApartamentojTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();
    
    protected int codigo_click_apartamento;
    
    public void getGradeApartamento() throws ParseException{
       //Consultar apartamentos
        Apartamentos oAp = new Apartamentos();


        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"#Id", "Torre"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeApartamentojTable.setModel(modeloTabela);
        gradeApartamentojTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeApartamentojTable.getColumnModel().getColumn(1).setPreferredWidth(200);

//        gradePessoajTable.setDefaultRenderer(Object.class, new ColorRenderer()); // DEIXA A GRADE ZEBRADA
        

try {
            resultSet = oAp.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(Cargos.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_APARTAMENTO")),
                    resultSet.getString("NOME_APARTAMENTO")
                    
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Cargos.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    public void getFieldApartamento(int codigo_click_apartamento) throws ParseException{

        Apartamentos oAp = new Apartamentos();
        ResultSet rs;
        oAp.setCodigo_apartamento(codigo_click_apartamento);

        try {
            rs = oAp.getConsultar(conecta);
            rs.next();

            //Pegar campos
            nomeApartamentojTextField.setText(rs.getString("NOME_APARTAMENTO"));
        } catch (SQLException ex) {
            Logger.getLogger(jFTorres.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preecher campos\n"+ex, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    
    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeApartamento();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade torres.\n" + e,
                "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        buscarjButton.setVisible(true);
        novojButton.setVisible(false);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(true);
        salvarMaisjButton.setVisible(true);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(true);
        nomeApartamentojTextField.grabFocus();
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFApartamentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        limparjButtonActionPerformed(evt);
    }//GEN-LAST:event_novojButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setVisible(false);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        salvarMaisjButton.setVisible(false);
        alterarjButton.setVisible(true);
        excluirjButton.setVisible(true);
        cancelarjButton.setVisible(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFCargos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:

        if (nomeApartamentojTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor escreva um nome para a torre.\n",
                "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else {
            try {

                buscarjButton.setVisible(true);
                novojButton.setVisible(true);
                editarjButton.setVisible(false);
                salvarjButton.setVisible(false);
                salvarMaisjButton.setVisible(false);
                alterarjButton.setVisible(false);
                excluirjButton.setVisible(false);
                cancelarjButton.setVisible(false);

                Apartamentos oAp = new Apartamentos();

                oAp.setNome_apartamento(nomeApartamentojTextField.getText().trim().toUpperCase());
                oAp.setCadastrar();

                buscarjButtonActionPerformed(evt);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar torre.\n" + e,
                    "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(evt);
        novojButtonActionPerformed(evt);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        if (nomeApartamentojTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor escreva um nome para a torre.\n",
                "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else {
            try {

                buscarjButton.setVisible(true);
                novojButton.setVisible(true);
                editarjButton.setVisible(false);
                salvarjButton.setVisible(false);
                salvarMaisjButton.setVisible(false);
                alterarjButton.setVisible(false);
                excluirjButton.setVisible(false);
                cancelarjButton.setVisible(false);

                Apartamentos oAp = new Apartamentos();

                oAp.setCodigo_apartamento(codigo_click_apartamento);

                oAp.setNome_apartamento(nomeApartamentojTextField.getText().trim().toUpperCase());
                oAp.setAlterar(conecta);

                buscarjButtonActionPerformed(evt);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar torre.\n" + e,
                    "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
        JOptionPane.showOptionDialog(null, "Deseja realmente EXCLUIR esse registro?", "Confirmação!", JOptionPane.DEFAULT_OPTION,
            JOptionPane.WARNING_MESSAGE, null, options, options[0]);

        if (sd != 0) {
            return;
        }

        try {
            cancelarjButtonActionPerformed(evt);

            Apartamentos oAp = new Apartamentos();

            oAp.setCodigo_apartamento(codigo_click_apartamento);
            oAp.setExcluir(conecta);

            limparjButtonActionPerformed(evt);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir registro\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        try {
            getGradeApartamento();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar a grade\n"+e, "Mensagen do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void cancelarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarjButtonActionPerformed
        // TODO add your handling code here:
        buscarjButton.setVisible(true);
        novojButton.setVisible(true);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        salvarMaisjButton.setVisible(false);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(false);
    }//GEN-LAST:event_cancelarjButtonActionPerformed

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
        // TODO add your handling code here:
        nomeApartamentojTextField.setText("");
    }//GEN-LAST:event_limparjButtonActionPerformed

    private void gradeApartamentojTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeApartamentojTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setVisible(true);
        codigo_click_apartamento = Integer.parseInt(gradeApartamentojTable.getValueAt(gradeApartamentojTable.getSelectedRow(), 0).toString());
        try {
            getFieldApartamento(codigo_click_apartamento);
        } catch (ParseException ex) {
            Logger.getLogger(jFTorres.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao pegar dados da grade\n"+ex, "Mensagen do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_gradeApartamentojTableMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        buscarjButton.setVisible(true);
        novojButton.setVisible(true);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        salvarMaisjButton.setVisible(false);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(false);
        nomeApartamentojTextField.grabFocus();
        try {
            ClassConecta.conecta();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao abrir conexão com o banco de dados.\n" + e,
                    "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        buscarjButtonActionPerformed(null);
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFApartamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFApartamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFApartamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFApartamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new jFApartamentos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton cancelarjButton;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeApartamentojTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton limparjButton;
    private javax.swing.JTextField nomeApartamentojTextField;
    private javax.swing.JButton novojButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    // End of variables declaration//GEN-END:variables
}
