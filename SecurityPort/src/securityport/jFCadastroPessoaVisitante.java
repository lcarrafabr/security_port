/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package securityport;

import Classes.CadastroPessoasVisitantes;
import Classes.ClassConecta;
import Classes.ComboItem;
import Classes.Funcoes;
import Classes.Pessoas;
import Classes.TipoAcessoVisitantes;
import Classes.Usuarios;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luciano Carrafa Benfica
 */
public class jFCadastroPessoaVisitante extends javax.swing.JDialog {

    /**
     * Creates new form jFCadastroPessoaVisitante
     */
    public jFCadastroPessoaVisitante() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        editarjButton = new javax.swing.JButton();
        salvarjButton = new javax.swing.JButton();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        cancelarjButton = new javax.swing.JButton();
        limparjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomeVisitantejTextField = new javax.swing.JTextField();
        rgjTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tipoVisitantejComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        empresajTextField = new javax.swing.JTextField();
        dataCadastrojFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        imagemjLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        observacaojTextArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        tipoAcessojComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        painelCorjPanel = new javax.swing.JPanel();
        carregarRegistrojButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gradeVisitantesjTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro visitante");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        buscarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/buscar.png"))); // NOI18N
        buscarjButton.setText("Buscar");
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/new2.png"))); // NOI18N
        novojButton.setText("Novo");
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);
        jToolBar1.add(jSeparator1);

        editarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/edit.png"))); // NOI18N
        editarjButton.setText("Editar");
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);

        salvarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/save.png"))); // NOI18N
        salvarjButton.setText("Salvar");
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        alterarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/save2.png"))); // NOI18N
        alterarjButton.setText("Alterar");
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/delete.png"))); // NOI18N
        excluirjButton.setText("Excluir");
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);
        jToolBar1.add(jSeparator2);
        jToolBar1.add(jSeparator3);
        jToolBar1.add(jSeparator4);

        cancelarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Cancel.png"))); // NOI18N
        cancelarjButton.setText("Cancelar");
        cancelarjButton.setFocusable(false);
        cancelarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(cancelarjButton);

        limparjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/clear.png"))); // NOI18N
        limparjButton.setText("Limpar");
        limparjButton.setFocusable(false);
        limparjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(limparjButton);

        jLabel1.setText("Nome visitante");

        nomeVisitantejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomeVisitantejTextFieldKeyReleased(evt);
            }
        });

        rgjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rgjTextFieldKeyReleased(evt);
            }
        });

        jLabel2.setText("RG");

        tipoVisitantejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "VISITANTE NORMAL", "ENTREGADOR", "FORNECEDOR", "PRESTADOR DE SERVIÇO" }));
        tipoVisitantejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoVisitantejComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo visitante");

        jLabel4.setText("Representante da empresa:");

        dataCadastrojFormattedTextField.setEditable(false);
        try {
            dataCadastrojFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel5.setText("Data cadastro");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imagem", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 109, 209)));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagemjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagemjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/UPLOAD_IMAGE.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 109, 209)));

        observacaojTextArea.setColumns(20);
        observacaojTextArea.setRows(5);
        jScrollPane1.setViewportView(observacaojTextArea);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel6.setText("Tipo acesso");

        tipoAcessojComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoAcessojComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Cor");

        painelCorjPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        painelCorjPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                painelCorjPanelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout painelCorjPanelLayout = new javax.swing.GroupLayout(painelCorjPanel);
        painelCorjPanel.setLayout(painelCorjPanelLayout);
        painelCorjPanelLayout.setHorizontalGroup(
            painelCorjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        painelCorjPanelLayout.setVerticalGroup(
            painelCorjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        carregarRegistrojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/concluido.png"))); // NOI18N
        carregarRegistrojButton.setText("Carregar registro");
        carregarRegistrojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarRegistrojButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(empresajTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                                .addComponent(nomeVisitantejTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(dataCadastrojFormattedTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                .addComponent(rgjTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel5)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6)
                        .addComponent(tipoVisitantejComboBox, 0, 211, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addComponent(tipoAcessojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addComponent(painelCorjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(carregarRegistrojButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 194, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nomeVisitantejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rgjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipoVisitantejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(empresajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dataCadastrojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tipoAcessojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(painelCorjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(carregarRegistrojButton))))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro pessoa visitante", jPanel2);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Histórico de visitas", jPanel7);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Visitantes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 109, 209)));

        gradeVisitantesjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Nome visitante", "RG", "Tipo visitante", "Empresa", "Tipo acesso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeVisitantesjTable.getTableHeader().setReorderingAllowed(false);
        gradeVisitantesjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeVisitantesjTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(gradeVisitantesjTable);
        if (gradeVisitantesjTable.getColumnModel().getColumnCount() > 0) {
            gradeVisitantesjTable.getColumnModel().getColumn(0).setResizable(false);
            gradeVisitantesjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            gradeVisitantesjTable.getColumnModel().getColumn(1).setResizable(false);
            gradeVisitantesjTable.getColumnModel().getColumn(1).setPreferredWidth(300);
            gradeVisitantesjTable.getColumnModel().getColumn(2).setResizable(false);
            gradeVisitantesjTable.getColumnModel().getColumn(2).setPreferredWidth(10);
            gradeVisitantesjTable.getColumnModel().getColumn(3).setResizable(false);
            gradeVisitantesjTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            gradeVisitantesjTable.getColumnModel().getColumn(4).setResizable(false);
            gradeVisitantesjTable.getColumnModel().getColumn(4).setPreferredWidth(150);
            gradeVisitantesjTable.getColumnModel().getColumn(5).setResizable(false);
            gradeVisitantesjTable.getColumnModel().getColumn(5).setPreferredWidth(80);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();

    ComboItem combo_tipo_acesso;
    protected String info_cor;

    public int recebe_codigo_pessoa_usuario;
    public String recebe_nivel_acesso;
    public int codigo_click_cad_visitor;

    public int recebe_operador = -1;//operador utilizado no form visitantes para carregar o visitante quando selecionado. se o valor for 1 passar dados para o form visitante.

    public String nome_visitante;
    public String rg;
    public String pega_cor;// variavel usada para enviar a cor RGB para o form visitante e pintar o painel.
    public String observacao_visitante;

    protected String rg_verificador; //usado para verificar se o RG ja existe no banco de dados.

//*************************************************** FIM DAS VARIÁVEIS ********************************************************************************************
    private void verificaRG() {

        CadastroPessoasVisitantes oCadastroVisitor = new CadastroPessoasVisitantes();
        ResultSet rs;
        if (!rgjTextField.getText().isEmpty()) {

            try {
                oCadastroVisitor.setRg(rgjTextField.getText().trim());
                rs = oCadastroVisitor.getConsultar(conecta);

                while (rs.next()) {
                    rg_verificador = rs.getString("RG");
                }
            } catch (Exception e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Erro ao consultar RG no verificador\n" + e,
                        "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            if (rg_verificador == null) {
                rg_verificador = "";
            }
        }
    }

    private void noImgCliente() {

        //quando não houver uma imagem na tela, mostrar a imagem padrão noImage
        ImageIcon noImg = new ImageIcon(getClass().getResource("/Resources/ImageName.png"));

        Image imgScale = noImg.getImage().getScaledInstance(191, 177, Image.SCALE_SMOOTH);

        imagemjLabel.setIcon(new ImageIcon(imgScale));

    }

    private void consultaTipoAcessoVisitante() {

        TipoAcessoVisitantes oTipoAcesso = new TipoAcessoVisitantes();
        ResultSet rs;
        tipoAcessojComboBox.removeAllItems();
        try {
            rs = oTipoAcesso.getConsultar(conecta);
            while (rs.next()) {
                tipoAcessojComboBox.addItem(new ComboItem(rs.getInt("CODIGO_TIPO_ACESSO_VISITANTE"), rs.getString("NOME_ACESSO")));
            }
            tipoAcessojComboBox.updateUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar campo tipo acesso\n" + e,
                    "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void getGradeCadastroVisitor() throws ParseException {
        //Consultar Usuario
        CadastroPessoasVisitantes oCadastro = new CadastroPessoasVisitantes();

        if (nomeVisitantejTextField.getText().length() > 0) {
            oCadastro.setNome_visitante(nomeVisitantejTextField.getText() + "%");
        }
        if (rgjTextField.getText().length() > 0) {
            oCadastro.setRg(rgjTextField.getText() + "%");
        }

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"#Id", "Nome visitante", "RG", "Tipo visitante", "Empresa", "Tipo acesso"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeVisitantesjTable.setModel(modeloTabela);
        gradeVisitantesjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeVisitantesjTable.getColumnModel().getColumn(1).setPreferredWidth(260);
        gradeVisitantesjTable.getColumnModel().getColumn(2).setPreferredWidth(10);
        gradeVisitantesjTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        gradeVisitantesjTable.getColumnModel().getColumn(4).setPreferredWidth(150);
        gradeVisitantesjTable.getColumnModel().getColumn(5).setPreferredWidth(80);

//        gradePessoajTable.setDefaultRenderer(Object.class, new ColorRenderer()); // DEIXA A GRADE ZEBRADA
        try {
            resultSet = oCadastro.getConsultar(conecta);
            if (resultSet.getRow() == 1) {
                resultSet.first();
            }

        } catch (SQLException ex) {
            Logger.getLogger(Pessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_CADASTRO_PESSOA_VISITANTE")),
                    resultSet.getString("NOME_VISITANTE"),
                    resultSet.getString("RG"),
                    resultSet.getString("TIPO_VISITANTE"),
                    resultSet.getString("EMPRESA"),
                    resultSet.getString("NOME_ACESSO")

                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Pessoas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void getFieldCadastroVisitante(int codigo_click_cad_visitor) throws ParseException {

        CadastroPessoasVisitantes oCadastro = new CadastroPessoasVisitantes();
        ResultSet rs;
        oCadastro.setCodigo_cadastro_pessoa_visitante(codigo_click_cad_visitor);

        try {
            rs = oCadastro.getConsultar(conecta);
            rs.next();

            //Pegar campos
            nomeVisitantejTextField.setText(rs.getString("NOME_VISITANTE"));
            rgjTextField.setText(rs.getString("RG"));
            tipoVisitantejComboBox.setSelectedItem(rs.getString("TIPO_VISITANTE"));
            empresajTextField.setText(rs.getString("EMPRESA"));
            dataCadastrojFormattedTextField.setText(Funcoes.getDataFormat(rs.getDate("DATA_CADASTRO")));

            ComboItem oTipoAcesso = new ComboItem(rs.getInt("CODIGO_TIPO_ACESSO_VISITANTE"), rs.getString("NOME_ACESSO"));
            tipoAcessojComboBox.setSelectedItem(oTipoAcesso);

            observacaojTextArea.setText(rs.getString("OBSERVACAO"));
            observacao_visitante = observacaojTextArea.getText();

            nome_visitante = nomeVisitantejTextField.getText().trim().toUpperCase();
            rg = rgjTextField.getText().trim();
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preecher campos\n" + ex, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        buscarjButton.setVisible(true);
        novojButton.setVisible(true);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(false);
        nomeVisitantejTextField.grabFocus();
        //----------------------------------
        carregarRegistrojButton.setVisible(false);
        try {
            ClassConecta.conecta();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao abrir conexão com o banco de dados.\n" + e,
                    "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }

        try {
            dataCadastrojFormattedTextField.setText(Funcoes.getNowBR());
        } catch (Exception e) {
        }

        observacaojTextArea.setWrapStyleWord(true);
        observacaojTextArea.setLineWrap(true);

        consultaTipoAcessoVisitante();

        noImgCliente();

        buscarjButtonActionPerformed(null);
    }//GEN-LAST:event_formWindowOpened

    private void tipoVisitantejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoVisitantejComboBoxActionPerformed
        // TODO add your handling code here:
        String tipo_visitante = tipoVisitantejComboBox.getSelectedItem().toString();

        if ("VISITANTE NORMAL".equals(tipo_visitante)) {
            empresajTextField.setEditable(false);
        } else {
            empresajTextField.setEditable(true);
        }


    }//GEN-LAST:event_tipoVisitantejComboBoxActionPerformed

    private void tipoAcessojComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoAcessojComboBoxActionPerformed
        // TODO add your handling code here:
        combo_tipo_acesso = (ComboItem) tipoAcessojComboBox.getSelectedItem();

        TipoAcessoVisitantes oTipoAcesso = new TipoAcessoVisitantes();

        ResultSet rs;

        oTipoAcesso.setCodigo_tipo_acesso(combo_tipo_acesso.getId());

        try {
            rs = oTipoAcesso.getConsultar(conecta);
            rs.next();

            //Pegar campos
            String cor = rs.getString("COR");
            pega_cor = cor;
            info_cor = rs.getString("INFORMACAO_ACESSO");

            String cor_rgb = (cor);

            String tar = cor_rgb;
            String[] teste = tar.split(",");

            Color color = new Color(Integer.parseInt(teste[0]), Integer.parseInt(teste[1]), Integer.parseInt(teste[2]));

            painelCorjPanel.setBackground(color);

        } catch (SQLException ex) {
            Logger.getLogger(jFTipoAcessoVisitante.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tipoAcessojComboBoxActionPerformed

    private void painelCorjPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelCorjPanelMouseEntered
        // TODO add your handling code here:
        painelCorjPanel.setToolTipText(info_cor);
    }//GEN-LAST:event_painelCorjPanelMouseEntered

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        buscarjButton.setVisible(true);
        novojButton.setVisible(false);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(true);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(true);
        nomeVisitantejTextField.grabFocus();
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        limparjButtonActionPerformed(evt);
    }//GEN-LAST:event_novojButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        if (nomeVisitantejTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo nome do visitante é obrigatório.",
                    "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (tipoVisitantejComboBox.getSelectedItem().equals("SELECIONE")) {
            JOptionPane.showMessageDialog(null, "Selecione um tipo de visitante",
                    "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (tipoAcessojComboBox.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "O campo Tipo acesso visitante é obrigatório",
                    "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (rgjTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo RG é obrigatório.",
                    "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                verificaRG();//FUNÇÃO QUE CONSULTA O RG NO SISTEMA PARA VERIFIFCAR ABAIXO SE JA ESTÁ CADASTRADO
                String rg_consulta = rgjTextField.getText().trim();

                //Verifica se o RG está cadastrado no sistema, se extiver enviar mensagem para o usuário.
                if (rg_verificador.equals(rg_consulta)) {
                    JOptionPane.showMessageDialog(null, "Este RG ja está cadastrado no sistema.\n"
                            + "Por favor verifique o RG ou consulte este mesmo numero no campo RG",
                            "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);

                } else {

                    buscarjButton.setVisible(true);
                    novojButton.setVisible(true);
                    editarjButton.setVisible(false);
                    salvarjButton.setVisible(false);
                    alterarjButton.setVisible(false);
                    excluirjButton.setVisible(false);
                    cancelarjButton.setVisible(false);

                    combo_tipo_acesso = (ComboItem) tipoAcessojComboBox.getSelectedItem();

                    CadastroPessoasVisitantes oVisitante = new CadastroPessoasVisitantes();

                    oVisitante.setCodigo_tipo_acesso_visitante(combo_tipo_acesso.getId());
                    oVisitante.setCodigo_pessoa_usuario(recebe_codigo_pessoa_usuario);
                    oVisitante.setNome_visitante(nomeVisitantejTextField.getText().trim().toUpperCase());
                    oVisitante.setRg(rgjTextField.getText().trim());
                    oVisitante.setTipo_visitante(tipoVisitantejComboBox.getSelectedItem().toString());
                    oVisitante.setEmpresa(empresajTextField.getText().trim().toUpperCase());
                    oVisitante.setData_cadastro(Funcoes.getDataFormatBR(dataCadastrojFormattedTextField.getText()));
                    oVisitante.setObservacao(observacaojTextArea.getText());
                    oVisitante.setCadastrar();
                    rg_verificador = null;//O verificador precisa voltar para null para não dar erro na consulta.
                }

            } catch (HeadlessException | ParseException e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar visitante." + e,
                        "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            buscarjButtonActionPerformed(evt);
        }
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
        // TODO add your handling code here:
        nomeVisitantejTextField.setText("");
        rgjTextField.setText("");
        tipoVisitantejComboBox.setSelectedItem("SELECIONE");
        empresajTextField.setText("");
//        consultaTipoAcessoVisitante();
        observacaojTextArea.setText("");
        try {
            dataCadastrojFormattedTextField.setText(Funcoes.getNowBR());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_limparjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeCadastroVisitor();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao cartregar a grade visitantes.\n" + e,
                    "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void gradeVisitantesjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeVisitantesjTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setVisible(true);
        codigo_click_cad_visitor = Integer.parseInt(gradeVisitantesjTable.getValueAt(gradeVisitantesjTable.getSelectedRow(), 0).toString());
        try {
            getFieldCadastroVisitante(codigo_click_cad_visitor);
        } catch (ParseException ex) {
            Logger.getLogger(jFCadastroPessoaVisitante.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao pegar dados da grade\n" + ex, "Mensagen do sistema", JOptionPane.ERROR_MESSAGE);
        }
        if (recebe_operador == 1) {
            carregarRegistrojButton.setVisible(true);
        }
    }//GEN-LAST:event_gradeVisitantesjTableMouseClicked

    private void nomeVisitantejTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeVisitantejTextFieldKeyReleased
        // TODO add your handling code here:
        try {
            CadastroPessoasVisitantes oCadastro = new CadastroPessoasVisitantes();
            oCadastro.setNome_visitante(nomeVisitantejTextField.getText());
            ResultSet rs = null;
            rs = oCadastro.getConsultar(conecta);
            getGradeCadastroVisitor();
        } catch (ParseException | SQLException ex) {
            Logger.getLogger(jFCadastroPessoaVisitante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_nomeVisitantejTextFieldKeyReleased

    private void rgjTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rgjTextFieldKeyReleased
        // TODO add your handling code here:
        try {
            CadastroPessoasVisitantes oCadastro = new CadastroPessoasVisitantes();
            oCadastro.setRg(rgjTextField.getText());
            ResultSet rs = null;
            rs = oCadastro.getConsultar(conecta);
            getGradeCadastroVisitor();
        } catch (ParseException | SQLException ex) {
            Logger.getLogger(jFCadastroPessoaVisitante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rgjTextFieldKeyReleased

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        if (nomeVisitantejTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo nome do visitante é obrigatório.",
                    "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (tipoVisitantejComboBox.getSelectedItem().equals("SELECIONE")) {
            JOptionPane.showMessageDialog(null, "Selecione um tipo de visitante",
                    "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (tipoAcessojComboBox.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "O campo Tipo acesso visitante é obrigatório",
                    "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (rgjTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo RG é obrigatório.",
                    "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                verificaRG();//FUNÇÃO QUE CONSULTA O RG NO SISTEMA PARA VERIFIFCAR ABAIXO SE JA ESTÁ CADASTRADO
                String rg_consulta = rgjTextField.getText().trim();
                System.out.println("rg_verificador: " + rg_verificador);
                System.out.println("rg_consulta: " + rg_consulta);
                if (rg_verificador.equals(rg_consulta)) {
                    JOptionPane.showMessageDialog(null, "Este RG ja está cadastrado no sistema.\n"
                            + "Por favor verifique o RG ou consulte este mesmo numero no campo RG",
                            "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
                } else {

                    buscarjButton.setVisible(true);
                    novojButton.setVisible(true);
                    editarjButton.setVisible(false);
                    salvarjButton.setVisible(false);
                    alterarjButton.setVisible(false);
                    excluirjButton.setVisible(false);
                    cancelarjButton.setVisible(false);

                    combo_tipo_acesso = (ComboItem) tipoAcessojComboBox.getSelectedItem();

                    CadastroPessoasVisitantes oVisitante = new CadastroPessoasVisitantes();
                    oVisitante.setCodigo_cadastro_pessoa_visitante(codigo_click_cad_visitor);

                    oVisitante.setCodigo_tipo_acesso_visitante(combo_tipo_acesso.getId());
                    oVisitante.setCodigo_pessoa_usuario(recebe_codigo_pessoa_usuario);
                    oVisitante.setNome_visitante(nomeVisitantejTextField.getText().trim().toUpperCase());
                    oVisitante.setRg(rgjTextField.getText().trim());
                    oVisitante.setTipo_visitante(tipoVisitantejComboBox.getSelectedItem().toString());
                    oVisitante.setEmpresa(empresajTextField.getText().trim().toUpperCase());
                    oVisitante.setData_cadastro(Funcoes.getDataFormatBR(dataCadastrojFormattedTextField.getText()));
                    oVisitante.setObservacao(observacaojTextArea.getText());
                    oVisitante.setCadastrar();
                    rg_verificador = null;
                }

            } catch (HeadlessException | ParseException e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar visitante." + e,
                        "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            buscarjButtonActionPerformed(evt);
        }
    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setVisible(false);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        alterarjButton.setVisible(true);
        excluirjButton.setVisible(true);
        cancelarjButton.setVisible(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:

        if ("OPERADOR".equals(recebe_nivel_acesso)) {

            JOptionPane.showMessageDialog(null, "Atenção!\n"
                    + "Você não tem acesso para realizar esta função.\n"
                    + "Por favor, entre em contato com o síndico ou o administrador do sistema.",
                    "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);

        } else {

            Object[] options = {"Sim", "Não"};
            int sd
                    = JOptionPane.showOptionDialog(null, "Deseja realmente EXCLUIR esse registro?", "Confirmação!", JOptionPane.DEFAULT_OPTION,
                            JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            if (sd != 0) {
                return;
            }

            try {
                cancelarjButtonActionPerformed(evt);

                CadastroPessoasVisitantes oCadastro = new CadastroPessoasVisitantes();

                oCadastro.setCodigo_cadastro_pessoa_visitante(codigo_click_cad_visitor);
                oCadastro.setExcluir(conecta);

                limparjButtonActionPerformed(evt);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao excluir registro\n" + e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            buscarjButtonActionPerformed(evt);
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void cancelarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarjButtonActionPerformed
        // TODO add your handling code here:
        buscarjButton.setVisible(true);
        novojButton.setVisible(true);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(false);
    }//GEN-LAST:event_cancelarjButtonActionPerformed

    private void carregarRegistrojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarRegistrojButtonActionPerformed
        // TODO add your handling code here:

        recebe_operador = -1;
        this.dispose();

    }//GEN-LAST:event_carregarRegistrojButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFCadastroPessoaVisitante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFCadastroPessoaVisitante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFCadastroPessoaVisitante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFCadastroPessoaVisitante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new jFCadastroPessoaVisitante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton cancelarjButton;
    private javax.swing.JButton carregarRegistrojButton;
    private javax.swing.JFormattedTextField dataCadastrojFormattedTextField;
    private javax.swing.JButton editarjButton;
    private javax.swing.JTextField empresajTextField;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeVisitantesjTable;
    private javax.swing.JLabel imagemjLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton limparjButton;
    private javax.swing.JTextField nomeVisitantejTextField;
    private javax.swing.JButton novojButton;
    private javax.swing.JTextArea observacaojTextArea;
    private javax.swing.JPanel painelCorjPanel;
    private javax.swing.JTextField rgjTextField;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox tipoAcessojComboBox;
    private javax.swing.JComboBox tipoVisitantejComboBox;
    // End of variables declaration//GEN-END:variables
}
