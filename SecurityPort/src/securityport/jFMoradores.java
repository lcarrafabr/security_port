/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package securityport;

import Classes.Apartamentos;
import Classes.Cargos;
import Classes.ClassConecta;
import Classes.ComboItem;
import Classes.Funcoes;
import Classes.Moradores;
import Classes.Pessoas;
import Classes.Torres;
import com.mysql.jdbc.Blob;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class jFMoradores extends javax.swing.JFrame {

    /**
     * Creates new form jFMoradores
     */
    public jFMoradores() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        salvarjButton = new javax.swing.JButton();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        cancelarjButton = new javax.swing.JButton();
        limparjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomeMoradorjTextField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        fotojLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cadastrarTorrejButton = new javax.swing.JButton();
        apartamentojComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        torrejComboBox = new javax.swing.JComboBox();
        cadastroApartamentojButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cargojComboBox = new javax.swing.JComboBox();
        cadastrocargojButton = new javax.swing.JButton();
        ramaljTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        carregarImagemjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradeMoradoresjTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        buscarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/buscar.png"))); // NOI18N
        buscarjButton.setText("Buscar");
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/new2.png"))); // NOI18N
        novojButton.setText("Novo");
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/edit.png"))); // NOI18N
        editarjButton.setText("Editar");
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);
        jToolBar1.add(jSeparator1);

        salvarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/save.png"))); // NOI18N
        salvarjButton.setText("Salvar");
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        alterarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/save2.png"))); // NOI18N
        alterarjButton.setText("Alterar");
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/delete.png"))); // NOI18N
        excluirjButton.setText("Excluir");
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);
        jToolBar1.add(jSeparator2);
        jToolBar1.add(jSeparator3);
        jToolBar1.add(jSeparator4);

        cancelarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Cancel.png"))); // NOI18N
        cancelarjButton.setText("Cancelar");
        cancelarjButton.setFocusable(false);
        cancelarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(cancelarjButton);

        limparjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/clear.png"))); // NOI18N
        limparjButton.setText("Limpar");
        limparjButton.setFocusable(false);
        limparjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(limparjButton);

        jLabel1.setText("Nome morador");

        nomeMoradorjTextField.setEditable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 109, 209)));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fotojLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fotojLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setText("Torre");

        cadastrarTorrejButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/add_small.png"))); // NOI18N
        cadastrarTorrejButton.setToolTipText("Cadastrar torre");
        cadastrarTorrejButton.setContentAreaFilled(false);
        cadastrarTorrejButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastrarTorrejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarTorrejButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Apartamento");

        cadastroApartamentojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/add_small.png"))); // NOI18N
        cadastroApartamentojButton.setToolTipText("Cadastro apartamentos");
        cadastroApartamentojButton.setContentAreaFilled(false);
        cadastroApartamentojButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastroApartamentojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastroApartamentojButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Cargo");

        cadastrocargojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/add_small.png"))); // NOI18N
        cadastrocargojButton.setToolTipText("Cadastro cargos");
        cadastrocargojButton.setContentAreaFilled(false);
        cadastrocargojButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastrocargojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrocargojButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Ramal");

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        carregarImagemjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/UPLOAD_IMAGE.png"))); // NOI18N
        carregarImagemjButton.setToolTipText("Selecionar imagem");
        carregarImagemjButton.setContentAreaFilled(false);
        carregarImagemjButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        carregarImagemjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarImagemjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(carregarImagemjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(carregarImagemjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeMoradorjTextField)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(cargojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cadastrocargojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(torrejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cadastrarTorrejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel2)))
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(apartamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cadastroApartamentojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(ramaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 90, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeMoradorjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(apartamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cadastroApartamentojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(torrejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cadastrarTorrejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cargojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cadastrocargojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(ramaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro de moradores", jPanel2);

        gradeMoradoresjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Morador", "Torre / Apartamento", "Ramal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeMoradoresjTable.getTableHeader().setReorderingAllowed(false);
        gradeMoradoresjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeMoradoresjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradeMoradoresjTable);
        if (gradeMoradoresjTable.getColumnModel().getColumnCount() > 0) {
            gradeMoradoresjTable.getColumnModel().getColumn(0).setResizable(false);
            gradeMoradoresjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            gradeMoradoresjTable.getColumnModel().getColumn(1).setResizable(false);
            gradeMoradoresjTable.getColumnModel().getColumn(1).setPreferredWidth(300);
            gradeMoradoresjTable.getColumnModel().getColumn(2).setResizable(false);
            gradeMoradoresjTable.getColumnModel().getColumn(2).setPreferredWidth(80);
            gradeMoradoresjTable.getColumnModel().getColumn(3).setResizable(false);
            gradeMoradoresjTable.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();

    ComboItem combo_torres;
    ComboItem combo_apartamento;
    ComboItem combo_cargo;

    String filename;//variável necessária para pegar o caminho da imagem quando selecionada em um diretório do computador.

    //----------------------------------------------------
    public int recebe_codigo_pessoa;
    public String recebe_nome_pessoa;
    private int codigo_click_morador;

//**********************************************************************************************************************************************
    
    
    protected void consultaTorres() {
        Torres oTorre = new Torres();
        ResultSet rs;
        try {
            rs = oTorre.getConsultar(conecta);
            torrejComboBox.removeAllItems();
            while (rs.next()) {
                torrejComboBox.addItem(new ComboItem(rs.getInt("CODIGO_TORRE"), rs.getString("NOME_TORRE")));
            }
            torrejComboBox.updateUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar o campo Torres\n" + e,
                    "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }

    protected void consultaApartamentos() {
        Apartamentos oApartamento = new Apartamentos();
        ResultSet rs;
        try {
            rs = oApartamento.getConsultar(conecta);
            apartamentojComboBox.removeAllItems();
            while (rs.next()) {
                apartamentojComboBox.addItem(new ComboItem(rs.getInt("CODIGO_APARTAMENTO"), rs.getString("NOME_APARTAMENTO")));
            }
            apartamentojComboBox.updateUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar o campo Torres\n" + e,
                    "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }

    protected void cargos() {
        Cargos oCargo = new Cargos();
        ResultSet rs;
        try {
            oCargo.setTipo_cargo("MORADOR");
            rs = oCargo.getConsultar(conecta);
            cargojComboBox.removeAllItems();
            while (rs.next()) {
                cargojComboBox.addItem(new ComboItem(rs.getInt("CODIGO_CARGO"), rs.getString("NOME_CARGO")));
            }
            cargojComboBox.updateUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar o campo Cargos\n" + e,
                    "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void noImgCliente() {

        //quando não houver uma imagem na tela, mostrar a imagem padrão noImage
        ImageIcon noImg = new ImageIcon(getClass().getResource("/Resources/ImageName.png"));

        Image imgScale = noImg.getImage().getScaledInstance(174, 176, Image.SCALE_SMOOTH);

        fotojLabel.setIcon(new ImageIcon(imgScale));

    }

    private void enviarImage() {

        //Pega uma imagem em um diretório no computador, guarda o caminho na variavel filename e faz o upload na tela.
        JFileChooser arquivo = new JFileChooser();
        arquivo.setDialogTitle("Selecione uma imagem.");
        arquivo.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int opc = arquivo.showOpenDialog(this);
        if (opc == JFileChooser.APPROVE_OPTION) {
            File file = new File("Caminho");
            file = arquivo.getSelectedFile();// recebe o caminho

            filename = file.getAbsolutePath();

            ImageIcon imagem = new ImageIcon(arquivo.getSelectedFile().getPath());
            fotojLabel.setIcon(new ImageIcon(imagem.getImage().getScaledInstance(fotojLabel.getWidth(), fotojLabel.getHeight(), Image.SCALE_SMOOTH)));
        }
    }
    
    
    public void getGradeMoradores() throws ParseException {
        //Consultar Moradores
        Moradores oMorador = new Moradores();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"#Id", "Morador", "Torre / Apartamento", "Ramal"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeMoradoresjTable.setModel(modeloTabela);
        gradeMoradoresjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeMoradoresjTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        gradeMoradoresjTable.getColumnModel().getColumn(2).setPreferredWidth(80);
        gradeMoradoresjTable.getColumnModel().getColumn(3).setPreferredWidth(10);

//        gradePessoajTable.setDefaultRenderer(Object.class, new ColorRenderer()); // DEIXA A GRADE ZEBRADA
        try {
            oMorador.setCodigo_pessoa_morador(recebe_codigo_pessoa);
            resultSet = oMorador.getConsultar(conecta);
            if (resultSet.getRow() == 1) {
                resultSet.first();
            }

        } catch (SQLException ex) {
            Logger.getLogger(Pessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_PESSOA_MORADOR")),
                    resultSet.getString("NOME_PESSOA"),
                    resultSet.getString("NOME_TORRE").concat(" / ").concat(resultSet.getString("NOME_APARTAMENTO")),
                    resultSet.getString("RAMAL")

                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Pessoas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    public void getFieldMorador(int codigo_click_morador) throws ParseException {

        Moradores oMorador = new Moradores();
        ResultSet rs;
        oMorador.setCodigo_pessoa_morador(codigo_click_morador);

        try {
            rs = oMorador.getConsultar(conecta);
            rs.next();

            /**
             * Esse código verifica se existe uma foto cadastrada no banco de
             * dados. Se existir foto pega o arquivo binário e converte em
             * imagem e mostra na tela*
             */
            Blob blob = (Blob) rs.getBlob("FOTO");

            //Se a variável blob for nula não executar esse trecho ou então ira dar erro e o código não seguirá adiante.
            if (blob != null) {

                byte[] data = blob.getBytes(1, (int) blob.length());
                BufferedImage img = null;

                try {
                    img = ImageIO.read(new ByteArrayInputStream(data));
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao trazer imagem\n" + e);
                }

                try {
                    ImageIcon icon = new ImageIcon(img);
                    fotojLabel.setIcon(new ImageIcon(icon.getImage().getScaledInstance(fotojLabel.getWidth(), fotojLabel.getHeight(), Image.SCALE_SMOOTH)));
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao trazer imagem 2\n" + e);
                }
            }//***********************Fim da condição IF do verifica blob ******************************************

            //Pegar campos
            ComboItem oTorre = new ComboItem(rs.getInt("CODIGO_TORRE"), rs.getString("NOME_TORRE"));
            torrejComboBox.setSelectedItem(oTorre);
            
            ComboItem oApartamento = new ComboItem(rs.getInt("CODIGO_APARTAMENTO"), rs.getString("NOME_APARTAMENTO"));
            apartamentojComboBox.setSelectedItem(oApartamento);
            
            ComboItem oCargo = new ComboItem(rs.getInt("CODIGO_CARGO"), rs.getString("NOME_CARGO"));
            cargojComboBox.setSelectedItem(oCargo);
            
            ramaljTextField.setText(String.valueOf(rs.getInt("RAMAL")));
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Pessoas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preecher campos\n" + ex, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        buscarjButton.setVisible(true);
        novojButton.setVisible(true);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(false);
        torrejComboBox.grabFocus();
        try {
            ClassConecta.conecta();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao abrir conexão com o banco de dados.\n" + e,
                    "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }

        nomeMoradorjTextField.setText(recebe_nome_pessoa);

        //carregar combobox
        consultaTorres();
        consultaApartamentos();
        cargos();

        //colocar noImage
        noImgCliente();
        
        buscarjButtonActionPerformed(null);

    }//GEN-LAST:event_formWindowOpened

    private void carregarImagemjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarImagemjButtonActionPerformed
        // TODO add your handling code here:
        enviarImage();
    }//GEN-LAST:event_carregarImagemjButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        buscarjButton.setVisible(true);
        novojButton.setVisible(false);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(true);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(true);
        torrejComboBox.grabFocus();
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_novojButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        Moradores oMorador = new Moradores();

        if (recebe_codigo_pessoa == 0) {
            JOptionPane.showMessageDialog(null, "Erro ao receber dados do morador da tela de pessoas.\n"
                    + "Por favor retorne a tela anterior e clique no nome do morador na grade de moradores\n", "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        } else if (torrejComboBox.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor informe ou cadastre uma torre.", "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (apartamentojComboBox.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor informe ou cadastre um apartamento.", "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (cargojComboBox.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor informe ou cadastre um cargo.", "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (ramaljTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor informe um ramal.", "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else {

            try {

                buscarjButton.setVisible(true);
                novojButton.setVisible(true);
                editarjButton.setVisible(false);
                salvarjButton.setVisible(false);
                alterarjButton.setVisible(false);
                excluirjButton.setVisible(false);
                cancelarjButton.setVisible(false);

                combo_torres = (ComboItem) torrejComboBox.getSelectedItem();
                combo_apartamento = (ComboItem) apartamentojComboBox.getSelectedItem();
                combo_cargo = (ComboItem) cargojComboBox.getSelectedItem();
                
                oMorador.setCodigo_pessoa_morador(recebe_codigo_pessoa);
                oMorador.setCodigo_torre(combo_torres.getId());
                oMorador.setCodigo_apartamento(combo_apartamento.getId());
                oMorador.setCodigo_cargo_morador(combo_cargo.getId());
                oMorador.setRamal(Integer.parseInt(ramaljTextField.getText().trim()));

                if (!"".equals(filename)) {
                    oMorador.setOperadorFile(1);
                    oMorador.setCaminho_imagem(filename);
                }

                oMorador.setCadastrar();
                oMorador.setOperadorFile(0);
                filename = "";

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar morador.\n"+e,
                        "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
        }
        buscarjButtonActionPerformed(evt);
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeMoradores();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade morador.\n"+e,
                        "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        int contador = gradeMoradoresjTable.getRowCount();
        
        if(contador > 0){
            novojButton.setEnabled(false);
        }else{
            novojButton.setEnabled(true);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void cadastrarTorrejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarTorrejButtonActionPerformed
        // TODO add your handling code here:
        jFTorres oTorre = new jFTorres();
        
        oTorre.setTitle("Cadastro torres");
        oTorre.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        oTorre.setLocationRelativeTo(null);
        oTorre.setModal(true);
        oTorre.pack();
        oTorre.setVisible(true);
        
        consultaTorres();
    }//GEN-LAST:event_cadastrarTorrejButtonActionPerformed

    private void cadastroApartamentojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastroApartamentojButtonActionPerformed
        // TODO add your handling code here:
        jFApartamentos oFormAP = new jFApartamentos();
        
        oFormAP.setTitle("Cadastro de apartamentos");
        oFormAP.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        oFormAP.setLocationRelativeTo(null);
        oFormAP.setModal(true);
        oFormAP.pack();
        oFormAP.setVisible(true);
        consultaApartamentos();
    }//GEN-LAST:event_cadastroApartamentojButtonActionPerformed

    private void cadastrocargojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrocargojButtonActionPerformed
        // TODO add your handling code here:
        jFCargos oFormCargo = new jFCargos();
        
        oFormCargo.setTitle("Cadastro de cargos");
        oFormCargo.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        oFormCargo.setLocationRelativeTo(null);
        oFormCargo.setModal(true);
        oFormCargo.pack();
        oFormCargo.setVisible(true);
        cargos();
    }//GEN-LAST:event_cadastrocargojButtonActionPerformed

    private void gradeMoradoresjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeMoradoresjTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setVisible(true);
        codigo_click_morador = Integer.parseInt(gradeMoradoresjTable.getValueAt(gradeMoradoresjTable.getSelectedRow(), 0).toString());  
        try {
            getFieldMorador(codigo_click_morador);
        } catch (ParseException ex) {
            Logger.getLogger(jFMoradores.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao pegar dados da grade\n"+ex, "Mensagen do sistema", JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_gradeMoradoresjTableMouseClicked

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        Moradores oMorador = new Moradores();

        if (recebe_codigo_pessoa == 0) {
            JOptionPane.showMessageDialog(null, "Erro ao receber dados do morador da tela de pessoas.\n"
                    + "Por favor retorne a tela anterior e clique no nome do morador na grade de moradores\n", "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        } else if (torrejComboBox.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor informe ou cadastre uma torre.", "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (apartamentojComboBox.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor informe ou cadastre um apartamento.", "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (cargojComboBox.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor informe ou cadastre um cargo.", "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else if (ramaljTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor informe um ramal.", "Mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        } else {

            try {

                buscarjButton.setVisible(true);
                novojButton.setVisible(true);
                editarjButton.setVisible(false);
                salvarjButton.setVisible(false);
                alterarjButton.setVisible(false);
                excluirjButton.setVisible(false);
                cancelarjButton.setVisible(false);

                combo_torres = (ComboItem) torrejComboBox.getSelectedItem();
                combo_apartamento = (ComboItem) apartamentojComboBox.getSelectedItem();
                combo_cargo = (ComboItem) cargojComboBox.getSelectedItem();
                
                oMorador.setCodigo_pessoa_morador(recebe_codigo_pessoa);
                oMorador.setCodigo_torre(combo_torres.getId());
                oMorador.setCodigo_apartamento(combo_apartamento.getId());
                oMorador.setCodigo_cargo_morador(combo_cargo.getId());
                oMorador.setRamal(Integer.parseInt(ramaljTextField.getText().trim()));

                if (!"".equals(filename)) {
                    oMorador.setOperadorFile(1);
                    oMorador.setCaminho_imagem(filename);
                }

                oMorador.setAlterar(conecta);
                oMorador.setOperadorFile(0);
                filename = "";

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar morador.\n"+e,
                        "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
        }
        buscarjButtonActionPerformed(evt);
    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setVisible(false);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        alterarjButton.setVisible(true);
        excluirjButton.setVisible(true);
        cancelarjButton.setVisible(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(jFPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd
                = JOptionPane.showOptionDialog(null, "Deseja realmente EXCLUIR esse registro?", "Confirmação!", JOptionPane.DEFAULT_OPTION,
                        JOptionPane.WARNING_MESSAGE, null, options, options[0]);

        if (sd != 0) {
            return;
        }
        try {
            cancelarjButtonActionPerformed(evt);

            Moradores oMorador = new Moradores();
            
            oMorador.setCodigo_pessoa_morador(codigo_click_morador);
            oMorador.setExcluir(conecta);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir registro\n" + e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        buscarjButtonActionPerformed(evt);
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void cancelarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarjButtonActionPerformed
        // TODO add your handling code here:
        buscarjButton.setVisible(true);
        novojButton.setVisible(true);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(false);
    }//GEN-LAST:event_cancelarjButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFMoradores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFMoradores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFMoradores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFMoradores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new jFMoradores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JComboBox apartamentojComboBox;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton cadastrarTorrejButton;
    private javax.swing.JButton cadastroApartamentojButton;
    private javax.swing.JButton cadastrocargojButton;
    private javax.swing.JButton cancelarjButton;
    private javax.swing.JComboBox cargojComboBox;
    private javax.swing.JButton carregarImagemjButton;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JLabel fotojLabel;
    private javax.swing.JTable gradeMoradoresjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton limparjButton;
    private javax.swing.JTextField nomeMoradorjTextField;
    private javax.swing.JButton novojButton;
    private javax.swing.JTextField ramaljTextField;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox torrejComboBox;
    // End of variables declaration//GEN-END:variables
}
